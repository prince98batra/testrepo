---
- name: Create Prometheus user
  user:
    name: "{{ prometheus_user }}"
    system: yes
    shell: /sbin/nologin
- name: Create required directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_user }}"
    mode: "0755"
  loop:
    - "{{ prometheus_config_dir }}"
    - "{{ prometheus_data_dir }}"
    - "{{ prometheus_log_dir }}"
    - "{{ prometheus_install_dir }}"
- name: Download Prometheus tarball
  get_url:
    url: "{{ prometheus_download_url }}"
    dest: /tmp/prometheus.tar.gz
- name: Extract Prometheus archive
  unarchive:
    src: /tmp/prometheus.tar.gz
    dest: "{{ prometheus_install_dir }}"
    remote_src: yes
- name: Move Prometheus binaries
  copy:
    src: "{{ prometheus_install_dir }}/prometheus-{{ prometheus_version
      }}.linux-amd64/{{ item }}"
    dest: /usr/local/bin/{{ item }}
    owner: root
    group: root
    mode: "0755"
    remote_src: yes
  loop:
    - prometheus
    - promtool
- name: Deploy Prometheus configuration
  template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_config_dir }}/prometheus.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_user }}"
    mode: "0644"
  notify: Restart Prometheus
- name: Deploy Prometheus rules configuration
  template:
    src: rules.yml.j2
    dest: "{{ prometheus_config_dir }}/rules.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_user }}"
    mode: "0644"
  notify: Restart Prometheus
- name: Create Prometheus systemd service
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/{{ prometheus_service_name }}.service
  notify: Restart Prometheus
- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
- name: Enable and start Prometheus service
  systemd:
    name: "{{ prometheus_service_name }}"
    enabled: yes
    state: started
